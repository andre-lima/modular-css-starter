// Set column width, similar to a grid system, but more flexible
@mixin symetric-wrap ($num-elements, $wrap-width, $gap: $default-gap-size) {
  
  display: flex;
  @include add-gap($gap);

  @if is-even($num-elements) {
    & > * {
      $items-per-line: $num-elements;
      $i: 1;
      
      $item-width: (100 / $items-per-line)#{"%"};
      flex-basis: calc(#{$item-width} - #{2 * $gap});
      flex-grow: 1;
      
      @while $items-per-line > 1 {
        $wrap-threshold: $items-per-line * $wrap-width;

        $i: $i + 1;
        $items-per-line: $num-elements / $i;
        
        // If items-per-line is not a divisor of num-elements, recalculate items-per-line until finding a divisor
        // ex: If num-elements is 6, items-per-line can only be 6, 3, 2 and 1
        @while not is-integer($items-per-line) {
          $i: $i + 1;
          $items-per-line: $num-elements / $i;
        }
        
        @media (max-width: $wrap-threshold) {
          $item-width: (100 / $items-per-line)#{"%"};
          flex-basis: calc(#{$item-width} - #{2 * $gap});
        }

      }
    }
  } @else {
    & > * {
      @include grid-column(1, $num-elements, calc( #{$wrap-width} - #{2 * $gap}));
    }
  }
}

// Add gaps between child elements of a parent
@mixin add-gap($gap: $default-gap-size) {
  @if $gap > 0 {
    margin: -$gap;
    
    & > * {
      flex-shrink: 1;
      margin: $gap;
    }

  }
}

@mixin grid-column($element-takes, $num-of-cols: $default-grid-columns, $wrap-width: auto, $grow: 1) {
  $width: (floor(100 * $element-takes * 100/ $num-of-cols) / 100)#{"%"};
  flex-grow: $grow;
  width: $width;
  min-width: $wrap-width;
}

@mixin flex($wrap: wrap, $direction: row) {
  display: flex;
  flex-wrap: $wrap;
  flex-direction: $direction;
}

@mixin wrap-mode () {
  //wrapped takes 100% of space
  //wrapped keeps width
  //only wrap pairs
}

@mixin vertical-center-children () {
  align-items: center;
}

@mixin border($width: 1px, $color: black, $radius: $default-border-radius) {
  border: $width solid $color;
  border-radius: $radius;
}

@mixin modal ($has-overlay: true) {
  @at-root {
    body/*.modal-is-open*/ {
      overflow: hidden;
    }
  }
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  @if $has-overlay {
    background-color: rgba(0,0,0,0.5); // overlay
  } @else {
    pointer-events: none;
  }
  
  > * {
    padding: 1em;
  }
}